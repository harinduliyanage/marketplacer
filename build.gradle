plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.3'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'com.ewerk.gradle.plugins.querydsl' version '1.0.10'
}

group = 'lk.slt.marketplacer'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	querydsl.extendsFrom implementation, compileOnly, runtimeOnly, annotationProcessor
}

repositories {
	mavenCentral()
}

dependencies {
	// spring dependencies
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
	// open api spec
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	// aws s3
	implementation 'com.amazonaws:aws-java-sdk-s3:1.12.560'
	// keycloak dependencies
	implementation 'org.keycloak:keycloak-policy-enforcer:22.0.3'
	implementation 'org.keycloak:keycloak-core:22.0.3'
	implementation 'org.keycloak:keycloak-admin-client:21.0.1'
	// lombok
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	// db driver
	runtimeOnly 'org.postgresql:postgresql'
	// query dsl
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'
	// pojo mapper
	implementation "org.mapstruct:mapstruct:1.5.5.Final"
	annotationProcessor "org.mapstruct:mapstruct-processor:1.5.5.Final"
	// test dependencies
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:postgresql'
	// validation
	implementation('org.springframework.boot:spring-boot-starter-validation')
	//aws
	implementation 'com.amazonaws:aws-java-sdk-s3'
}

querydsl {
	jpa = true
	library = 'com.querydsl:querydsl-apt:5.0.0:jakarta'
	querydslSourcesDir = "$buildDir/generated/sources/annotationProcessor/java/main"
}

compileQuerydsl {
	options.annotationProcessorPath = configurations.querydsl
}

tasks.named('test') {
	useJUnitPlatform()
}
